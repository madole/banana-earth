{"version":3,"sources":["../external \"Cesium\"","App.js","useInterval.js","reportWebVitals.js","index.js"],"names":["module","exports","Cesium","App","ref","useRef","React","Cartesian3","fromDegrees","position","setPosition","callback","delay","savedCallback","current","id","setInterval","clearInterval","useInterval","a","fetch","response","json","altitude","latitude","longitude","getISSPosition","style","top","left","right","bottom","uri","minimumPixelSize","maximumPixelSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qGAAAA,EAAOC,QAAUC,Q,wLC8BFC,MAtBf,WACI,IAAMC,EAAMC,iBAAO,MADR,EAEqBC,WAAeC,aAAWC,YAAY,UAAW,QAAS,MAF/E,mBAEJC,EAFI,KAEMC,EAFN,KAaX,OCnBuB,SAACC,EAAUC,GAClC,IAAMC,EAAgBP,WAEtBA,aAAgB,WACZO,EAAcC,QAAUH,IACzB,CAACA,IAEJL,aAAgB,WAKZ,GAAc,OAAVM,EAAgB,CAChB,IAAIG,EAAKC,aALb,WACIH,EAAcC,YAIaF,GAC3B,OAAO,kBAAMK,cAAcF,OAEhC,CAACH,IDPJM,EAAY,YACY,uCAAG,oCAAAC,EAAA,sEACIC,MAAM,kDADV,cACbC,EADa,gBAEAA,EAASC,OAFT,OAEbA,EAFa,OAGZC,EAAiCD,EAAjCC,SAAUC,EAAuBF,EAAvBE,SAAUC,EAAaH,EAAbG,UAC3Bf,EAAYH,aAAWC,YAAYiB,EAAWD,EAAqB,IAAXD,IAJrC,2CAAH,qDAMpBG,KACD,KAGC,cAAC,IAAD,CAAQtB,IAAKA,EAAKuB,MAAO,CAAClB,SAAS,WAAYmB,IAAK,EAAGC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,GAAlF,SACI,cAAC,IAAD,CAAQtB,SAAUA,EAAlB,SACI,cAAC,IAAD,CAAeuB,IAAK,eAAgBC,iBAAkB,IAAKC,iBAAkB,WEZ9EC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.59a14442.chunk.js","sourcesContent":["module.exports = Cesium;","import * as React from 'react';\nimport {useRef} from 'react';\nimport {Entity, ModelGraphics, Viewer} from 'resium'\nimport './App.css';\nimport {Cartesian3} from 'cesium'\nimport {useInterval} from \"./useInterval\";\n\n\nfunction App() {\n    const ref = useRef(null);\n    const [position, setPosition] = React.useState(Cartesian3.fromDegrees(151.2093, -33.8688, 2000.0))\n    useInterval(() => {\n        const getISSPosition = async () => {\n            const response = await fetch('https://api.wheretheiss.at/v1/satellites/25544')\n            const json = await response.json()\n            const {altitude, latitude, longitude} = json\n            setPosition(Cartesian3.fromDegrees(longitude, latitude, altitude * 1000))\n        }\n        getISSPosition()\n    }, 5000)\n\n    return (\n        <Viewer ref={ref} style={{position:'absolute', top: 0, left: 0, right: 0, bottom: 0}}>\n            <Entity position={position}>\n                <ModelGraphics uri={\"/banana.gltf\"} minimumPixelSize={200} maximumPixelSize={500}/>\n            </Entity>\n        </Viewer>\n    );\n}\n\nexport default App;\n","import * as React from \"react\";\n\nexport const useInterval = (callback, delay) => {\n    const savedCallback = React.useRef();\n\n    React.useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    React.useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}